@use "../../utils/mixins" as *;
@use "../../utils/variables" as *;

@mixin rounded($bgcolor: $primary) {
  background-color: $bgcolor;
  border-top-right-radius: 50%;
  border-top-left-radius: 50%;
}
@keyframes animate {
  0% {
    opacity: 0;
    transform: rotate(45deg) translate(-20px, -20px);
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: rotate(45deg) translate(20px, 20px);
  }
}
@mixin header {
  &-header {
    color: $black;
    @include flex(column);
    border: 1px solid red;
    @include size(100vw, auto);
    padding-block: 5.4rem;
    padding-inline: 3.3rem;
    gap: 6rem;

    div {
      @include size(100%, auto);
      @include flex(column);
    }

    /**************************************Header Left Section**************************************/
    .left {
      // border: 1px solid red;
      align-items: flex-start;
      gap: 3rem;
      justify-content: flex-start;

      //Blob Component
      .header_blob {
        display: none;
      }
      //Search Component
      .header_action {
        @include flex(column);
        align-items: flex-start;
        gap: 1.5rem;
        .header_search {
          @include flex;
          justify-content: flex-start;
          gap: 0.25rem;
          button {
            @include size(5.857rem, 2.88rem);
            width: min-content !important;
            font-size: 1.05373rem;
          }
          span {
            @include size(21.07rem, 2.88rem);
            border: 1.31716px solid $primary;
            @include flex;
            justify-content: inherit;
            padding-inline: 0.5rem;
            gap: 0.5rem;
            svg {
              @include size(1.3rem);
              path {
                fill: $primary;
              }
            }
            input {
              caret-color: $primary;
              @include size(14.3rem, 1.6rem);
              @include formatText(400, 1.0537rem, 0.6rem);
              border: none;
              background: transparent;
              outline: none;
              color: $primary;
              &::placeholder {
                color: inherit;
              }
            }
          }
        }
      }
      div {
        align-items: flex-start;
        gap: 1.5rem;
      }
      h1 {
        @include size(33.285rem, 12.7rem);
        @include formatText(400, 3.15rem, 4.2rem);
        @media only screen and (600px > width) {
          @include ellipsis;
        }
        @media only screen and (600px < width) {
          width: 52.285rem;
          height: auto;
        }
        @media only screen and (700px < width < 850px) {
          width: 100% !important;
        }
        // @include ellipsis;

        .header_bold {
          font-weight: 500;
          color: $primary;
        }
      }
      p {
        @include size(29.35rem, 6.9rem);
        @include formatText(400, 1.5rem, 2.2rem);
        @include ellipsis;
        // }
      }
    }
    /**************************************Header Center Section**************************************/
    .center {
      // border: 1px solid red;
      cursor: pointer;
      @include size(100%, 12rem);

      span {
        -webkit-user-select: none;
        user-select: none;
        display: block;
        @include size(3rem);
        border-bottom: 5px solid $primary;
        border-right: 5px solid $primary;
        transform: rotate(45deg);
        margin: -10px;
        animation: animate 2s infinite;
        &:nth-child(2) {
          animation-delay: -0.2s;
        }
        &:nth-child(3) {
          animation-delay: -0.4s;
        }
      }
    }

    /**************************************Header Right Section**************************************/
    .right {
      // border: 1px solid red;
      width: 100%;
      @include customgrid(2, 3, 103.36px, calc(100% / 3));
      span {
        // border: 1px solid red;
        height: 100%;
        display: none;
        filter: drop-shadow(0 0 2.5rem rgba(0, 0, 0, 0.1));
        img {
          @include size(100%);
        }
        //texts in shapes
        span {
          color: $background;

          &:nth-child(1) {
            @include formatText(500, 2rem, 3.1rem);
            @include size(4.1rem, 3.1rem);
          }
          &:nth-child(2) {
            @include formatText(300, 1.2rem, 1.9rem);
            @include size(4.9rem, 1.9rem);
          }
        }
        // /subgrids
        &:nth-child(1) {
          @include flex;
          @include position("2/3", "2/4");
          img {
            transform: scaleX(-1);
            border-bottom-left-radius: 25%;
          }
        }
        &:nth-child(2) {
          @include flex;
          @include position("1/2");
        }

        &:nth-child(5) {
          @include flex(column);
          @include position("2/3", "1/2");
          @include rounded(#f04589);
          @include size(10.3rem);
          border-radius: 50%;
          justify-self: center;
        }
        &:nth-child(6) {
          @include flex(column);
          @include position("1/2", "2/3");
          @include rounded;
        }
        &:nth-child(7) {
          @include flex(column);
          @include position("1/2", "3/4");
          background-color: #4b5d73;
          border-top-left-radius: 50%;
          border-bottom-left-radius: 50%;
        }
      }
      .play {
        @include size(100%);
        svg {
          cursor: pointer;
          circle {
            transition: fill 0.25s ease-in-out;
          }
          &:hover {
            circle {
              fill: #fbb606;
            }
          }
        }
      }
    }
    @media only screen and (500px < width) {
      .right {
        @include customgrid(2, 3, 153.36px, calc(100% / 3));
        span {
          &:nth-child(5) {
            @include size(14.9rem);
          }
        }
      }
    }
    //blob update
    @media only screen and (601px <= width <= 700px), (width > 850px) {
      .left {
        position: relative;
        .header_blob {
          display: block;
          position: absolute;
          @include size(40vw);
          align-self: flex-end;
          top: 180px;
          right: -20px;
          svg {
            linearGradient {
              stop {
                &:nth-child(1) {
                  stop-color: $primary;
                }
                &:nth-child(2) {
                  stop-color: #021b79;
                }
              }
            }
          }
        }
      }
    }

    @media only screen and (850px< width) {
      .left {
        .header_blob {
          top: 0;
        }
      }
    }
    @media only screen and (701px <= width) {
      .left {
        align-items: flex-start;
        gap: 5rem;
        //Search Component
        .header_action {
          @include flex(column);
          align-items: flex-start;
          gap: 2.5rem;
          .header_search {
            gap: 0.25rem;
            button {
              @include size(7.857rem, 3.88rem);
              font-size: 1.55373rem;
            }
            span {
              @include size(27.07rem, 3.88rem);
              padding-inline: 0.5rem;
              gap: 0.5rem;
              svg {
                @include size(1.75rem);
              }
              input {
                @include size(inherit, 3.88rem);
                @include formatText(400, 1.0537rem, 0.6rem);
                font-size: 1.55373rem;
              }
            }
          }
        }
        div {
          gap: 3rem;
        }
        h1 {
          @include size(53.285rem, auto);
          @include formatText(400, 4.15rem, 4.8rem);
        }
        p {
          @include size(49.35rem, 6.9rem);
          @include formatText(400, 1.85rem, 2.8rem);
          height: auto;
        }
      }
      .right {
        @include customgrid(2, 4, 18rem, calc(100% / 4));
        span {
          //texts in shapes
          span {
            &:nth-child(1) {
              @include formatText(500, 2.3rem, 3.5rem);
              @include size(4.1rem, 3.1rem);
            }
            &:nth-child(2) {
              @include formatText(300, 1.5rem, 1.9rem);
              @include size(4.9rem, 1.9rem);
            }
          }
          // /subgrids
          &:nth-child(1) {
            @include flex;
            @include position("2/3", "3/5");
          }
          &:nth-child(2) {
            @include position("1/2");
          }

          &:nth-child(5) {
            @include position("2/3", "1/2");
            @include size(17.5rem);
          }
          &:nth-child(6) {
            @include position("1/2", "2/3");
          }
          &:nth-child(8) {
            @include position("2/3", "2/3");
            display: flex;
            background-color: $primary;
          }
          &:nth-child(7) {
            @include flex(column);
            @include position("1/2", "3/4");
            background-color: #4b5d73;
          }
          &:nth-child(9) {
            @include flex(column);
            @include position("1/2", "4/5");
            background-color: #4b5d73;
          }
        }
      }
    }
    @media only screen and (900px <= width) {
      .right {
        @include customgrid(2, 4, 24rem, calc(100% / 4));
      }
    }
    @media only screen and (1000px <= width < 1201px) {
      .right {
        @include customgrid(2, 4, 26rem, calc(100% / 4));
      }
    }
    @media only screen and (width > 1200px) {
      padding-inline: 8rem;
      @include customgrid(2, 2, auto, 1fr);
      .left {
        @include position("1/2");
        height: 100%;
        align-items: flex-start;
        gap: 5rem;
        //Search Component
        .header_action {
          gap: 2.5rem;
          .header_search {
            gap: 0.25rem;
            button {
              @include size(7.857rem, 3.88rem);
              font-size: 1.55373rem;
            }
            span {
              @include size(27.07rem, 3.88rem);
              padding-inline: 0.5rem;
              gap: 0.5rem;
              svg {
                @include size(1.75rem);
              }
              input {
                @include size(inherit, 3.88rem);
                @include formatText(400, 1.0537rem, 0.6rem);
                font-size: 1.55373rem;
              }
            }
          }
        }
        div {
          gap: 2rem;
        }
        h1 {
          @include size(53.285rem, auto);
          @include formatText(400, 4.5rem, 6rem);
        }
        p {
          @include size(39.35rem, 6.9rem);
          @include formatText(400, 1.5rem, 2.2rem);
        }

        .header_blob {
          display: none;
        }
      }
      .right {
        @include position("1/2", "2/3");
        align-self: flex-start;
        height: 100%;
        @include customgrid(4, 4, 13.4rem);
        justify-content: flex-end;

        span {
          @include flex;
          // /subgrids
          &:nth-child(1) {
            @include flex;
            @include position("4/5", "3/5");
            img {
              transform: scaleX(-1);
              border-bottom-left-radius: 25%;
            }
          }
          &:nth-child(2) {
            @include position("3/4", "1/2");
          }
          &:nth-child(3) {
            @include position("1/2", "2/3");
            img {
              border-radius: 50%;
            }
          }
          &:nth-child(4) {
            @include position("2/3", "3/4");
            img {
              border-radius: 50%;
            }
          }
          &:nth-child(5) {
            @include size(100%);
            @include position("4/5", "2/3");
          }
          &:nth-child(6) {
            @include flex(column);
            @include position("2/3");
            border-radius: 0;
            background-color: #47c079;
          }
          &:nth-child(7) {
            @include flex(column);
            @include position("3/4", "4/5");
            border-radius: 0;
            border-bottom-left-radius: 50%;
            border-top-left-radius: 50%;
          }
          &:nth-child(8) {
            @include position("3/4", "2/3");
            @include rounded;
            background-color: #a754ee;
          }
          &:nth-child(9) {
            @include position("1/2", "4/5");
            @include rounded(#1dbcf4);
          }
          &:nth-child(10) {
            @include position("2/3", "4/5");
            background-color: #1dbcf4;
          }
          &:nth-child(11) {
            @include position("1/2", "3/4");
            background-color: $tertiary;
            border-bottom-right-radius: 50%;
            border-top-right-radius: 50%;
          }
          &:nth-child(12) {
            @include position("3/4", "3/4");
            background-color: $primary;
          }
          &:nth-child(13) {
            @include position("1/2");
          }
          &:nth-child(14) {
            @include position("4/5", "1/2");
            background-color: #acd7fa;
            border-radius: 50%;
            border-bottom-right-radius: 0px;
          }

          &:nth-child(15) {
            @include position("1/2");
          }
          &:nth-child(16) {
            @include position("2/3", "1/2");
          }
        }
      }
      .center {
        width: 100%;
        @include position("2/3", "1/3");
      }
    }
    @media only screen and (1400px < width < 1700px) {
      .left,
      .right {
        align-self: center;
        justify-content: center;
        align-items: center;
      }

      .left {
        justify-content: flex-start;

        div {
          width: 42rem;
        }
      }
    }
    @media only screen and (width > 1750px) {
      .left {
        align-items: center;
        transform: translateX(-10rem);

        div {
          width: 42rem;
        }
        .header_blob {
          display: flex;
          width: 25vw;
          transform: translate(30rem, -15rem);
        }
      }

      .right {
        align-self: center;
        justify-content: center;
        align-items: center;
      }
    }
  }
}
