@use "../../utils/mixins" as *;
@use "../../utils/variables" as *;
@mixin saying {
  &-saying {
    border: 1px solid transparent;
    color: $black;
    @include flex(column);
    @include size(100vw, auto);
    gap: 3rem;
    justify-content: flex-start;
    // padding: 3rem 3.3rem;
    // border: 1px solid red;
    padding-top: 3rem;
    border: 1px solid red;
    height: 48rem;
    background: $primary;
    h3.brytzone_heading--bordered span {
      color: $background;
    }
    @media only screen and (width > 800px) {
      height: 53rem;
    }
    @media only screen and (width > 1200px) {
      height: 62rem;
    }
    /******************************Swiper Cards******************************/
    article {
      width: 201.5px;
      height: 271.52px;
    }
    /******************************Swiper Carousel******************************/
    .mySwiper {
    }
    .swiper {
      // border: 1px solid red;
      background: transparent;
      @include size(100vw, 33rem);
      //arrows
      .swiper-button-next::after,
      .swiper-button-prev::after {
        color: $background;
        opacity: 1;
        transition: opacity 0.25s ease-in-out;
      }
      @media only screen and (width > 800px) {
        height: 38rem;
        //display arrows on hover
        .swiper-button-next::after,
        .swiper-button-prev::after {
          opacity: 0;
        }

        &:hover {
          .swiper-button-next::after,
          .swiper-button-prev::after {
            opacity: 1;
          }
        }
      }
      @media only screen and (width > 1200px) {
        width: 100rem;
        @include size(100rem, 47.5rem);
      }

      //bulltets
      .swiper-pagination {
        transform: translateY(-34px);
        @media only screen and (width > 600px) {
          transform: translateY(-4px);
        }

        &-bullet {
          @include size(1rem);
          background: $background;
          transition: height 0.25s linear, width 0.25s linear;
          &-active {
            @include size(1.2rem);
            background: $background;
            transition: height 0.25s linear, width 0.25s linear;
          }
        }
        @media only screen and (width > 800px) {
          transform: translateY(5px);
          &-bullet {
            @include size(1.3rem);
            &-active {
              @include size(1.45rem);
            }
          }
        }
        @media only screen and (width > 1200px) {
          transform: translate(-88px, -95px);
          &-bullet {
            @include size(1.25rem);
            &-active {
              @include size(1.4rem);
            }
          }
        }
      }

      .swiper-wrapper {
        @include size(auto);

        background: inherit;
      }
    }

    .swiper-slide {
      text-align: center;
      font-size: 18px;
      background: $primary;
      @include size(100%, inherit);
      @include flex;
      // border: 1px solid red;
      height: 33rem;
      position: relative;

      @include flex(column);
      @media only screen and (width > 800px) {
        height: 38rem;
      }
      img {
        display: none;
      }
      @media only screen and (width > 1200px) {
        @include grid;
        justify-content: flex-start;
        /* max-width: 75rem; */
        padding-inline: calc(calc(100% - 65rem) / 2);
        img {
          display: block;
          position: absolute;
          width: 304.37px;
          height: 475.11px;
          z-index: 1;
          right: 56px;
        }
      }
      article {
        // border: 1px solid red;
        @include size(27.5rem, 16.5rem);
        z-index: 2;
        img {
          display: block;
        }
        @include flex(column);
        gap: 3rem;
        background: linear-gradient(111.5deg, rgba(255, 255, 255, 0.2) -17.53%, rgba(255, 255, 255, 0.052) 82.47%);
        box-shadow: 10.4601px 8.258px 25.3245px rgba(0, 0, 0, 0.14);
        -webkit-backdrop-filter: blur(2.4774px);
        backdrop-filter: blur(2.4774px);
        /* Note: backdrop-filter has minimal browser support */

        border-radius: 1.10107px;
        padding-top: 3rem;
        div {
          &:nth-child(1) {
            @include flex(column);
            // border: 1px solid red;
            position: relative;
            img {
              @include size(10.1rem);

              border-radius: 50%;
              position: absolute;
              top: -107px;
            }
            p {
              color: $background;
              @include formatText(400, 0.825rem, 1.2rem);
              @include size(19.2rem, 4.8rem);
              text-align: left;
            }
            span {
              @include flex;
              position: absolute;
              svg {
                width: 11px;
                height: 28px;
                @include size(1.1rem, 2.8rem);
              }

              &:nth-child(1) {
                left: -24px;
                top: -22px;
              }
              &.last {
                right: -24px;
                top: 40px;
              }
            }
          }
          &:nth-child(2) {
            @include flex(column);
            align-items: flex-start;
            width: 192.52px;

            // width: 100%;
            h3 {
              // width: 61px;
              height: 17px;
              color: $tertiary;
              @include formatText(600, 1.1rem, 1.7rem);
            }
            span {
              // border: 1px solid red;
              // width: 119px;
              color: $background;

              height: 12px;

              @include formatText(400, 0.77rem, 1.2rem);
            }
          }
        }

        @media only screen and (width > 650px) {
          @include size(60%, 21.5rem);
          gap: 6rem;
          padding-top: 4rem;
          max-width: 50rem;
          max-height: 27rem;
          div {
            width: 60%;
            &:nth-child(1) {
              img {
                top: -11.8rem;
              }
              p {
                @include formatText(400, 1.2rem, 1.8rem);
                width: auto;
              }
              span {
                svg {
                  @include size(1.5rem, 2.8rem);
                }
                &.last {
                  top: 74px;
                }
              }
            }
            &:nth-child(2) {
              width: 60%;
              gap: 0.5rem;
              h3 {
                @include formatText(400, 1.3rem, 1.7rem);
              }
              span {
                @include formatText(400, 1rem, 1.2rem);
              }
            }
          }
        }
        @media only screen and (width > 800px) {
          height: 27rem;
          div {
            width: 80%;
            &:nth-child(1) {
              p {
                @include formatText(400, 1.5rem, 2.2rem);
              }
              span {
                svg {
                  @include size(1.75rem, 2.8rem);
                }
              }
            }
            &:nth-child(2) {
              width: 80%;
              gap: 1rem;
              h3 {
                @include formatText(400, 2rem, 3rem);
              }
              span {
                @include formatText(400, 1.4rem, 2.1rem);
              }
            }
          }
        }
        @media only screen and (width > 1200px) {
          min-width: 50rem;
          width: 50rem;
          img {
            display: none;
          }
          div {
            width: 70% !important;
          }
        }
      }
    }

    .autoplay-progress {
      position: absolute;
      right: 16px;
      bottom: 16px;
      z-index: 10;
      width: 48px;
      height: 48px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;
      color: $background;
    }

    .autoplay-progress svg {
      --progress: 0;
      position: absolute;
      left: 0;
      top: 0px;
      z-index: 10;
      width: 100%;
      height: 100%;
      stroke-width: 4px;
      stroke: $background;
      fill: none;
      stroke-dashoffset: calc(125.6 * (1 - var(--progress)));
      stroke-dasharray: 125.6;
      transform: rotate(-90deg);
    }
  }
}
